package filter;

import java.io.IOException;
import jakarta.servlet.*;
import jakarta.servlet.annotation.WebFilter;
import jakarta.servlet.http.*;

@WebFilter("/*") // Garanta que esta linha NÃO esteja comentada.
public class FilterLogin implements Filter {

    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)
            throws IOException, ServletException {
        
        HttpServletRequest request = (HttpServletRequest) req;
        HttpServletResponse response = (HttpServletResponse) res;

        String uri = request.getRequestURI();
        String contextPath = request.getContextPath();
        
        String path = uri.substring(contextPath.length()); 
        if (!path.startsWith("/")) {
            path = "/" + path;
        }

        boolean isLoginPage = path.equals("/login.jsp") || path.equals("/login");
        boolean isStaticResource = path.startsWith("/css/") || 
                                   path.startsWith("/js/") || 
                                   path.startsWith("/images/") ||
                                   path.startsWith("/fonts/"); 

        // IMPORTANTE: Remova path.equals("/") e path.equals("/index.jsp") daqui
        // se você quer que a raiz e o index.jsp sejam PROTEGIDOS pelo login.
        // Apenas páginas EXPLICITAMENTE públicas devem estar aqui.
        boolean isHome = false; // Ou adicione paths de páginas que devem ser PUBLICAS sem login (ex: /sobre.jsp)
                                // Se você tem um HomeController mapeado para '/' que deve ser acessado APENAS por usuários logados,
                                // ele NÃO deve ser tratado como isHome aqui.

        HttpSession session = request.getSession(false); 

        boolean isLoggedIn = (session != null && session.getAttribute("usuarioLogado") != null);

        // A lógica principal do filtro:
        // Agora, somente se estiver logado, ou for a página de login, ou for recurso estático,
        // a requisição prossegue. Caso contrário, redireciona para login.
        if (isLoggedIn || isLoginPage || isStaticResource) { //
            chain.doFilter(req, res); // Permite que a requisição prossiga
        } else {
            response.sendRedirect(contextPath + "/login.jsp"); //
        }
    }

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
    }

    @Override
    public void destroy() {
    }
}